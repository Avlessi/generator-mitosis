---
 - name: Copy elk configuration directory
   copy: src="{{ role_path }}/files/elk" dest={{<%= appName %>_home}}
   
<% if (tools.indexOf("elk") > -1) { %> 

 - name: Create Elasticsearch service
   shell: >
           docker service create \
            --name elasticsearch \
            --label traefik.frontend.rule=Host:elasticsearch.<%= appName %> \
            --label traefik.port=9200 \
            --label traefik.port=9300 \
            --constraint=node.role==manager \
            --publish 9200:9200 \
            --publish 9300:9300 \
            --network <%= appName %>-net \
            --network elk-net -e ELASTICSEARCH_URL=http://elasticsearch:9200 \
            --reserve-memory 100m \
            --limit-cpu 0.5 \
            --env ES_JAVA_OPTS="-Xms1g -Xmx1g" \
            elasticsearch:5.2.0

 - name: Create Logstash service
   shell: >
           docker service create \
            --name logstash \
            --mount "type=bind,source=/opt/<%= appName %>/elk/logstash,target=/conf" \
            --constraint=node.role==manager \
            --publish 5555:5555 \
            --publish 5044:5044 \
            --publish 12201:12201/udp \
            --publish 12201:12201 \
            --network <%= appName %>-net \
            --network elk-net -e LOGSPOUT=ignore -e ELASTICSEARCH_URL=http://elasticsearch:9200 \
            --reserve-memory 50m \
            --limit-cpu 0.5 \
            logstash:5.2.0 -f /conf/logstash.conf

 - name: Create Kibana service
   shell: >
           docker service create \
            --name kibana \
            --label traefik.frontend.rule=Host:kibana.<%= appName %> \
            --label traefik.port=5601 \
            --constraint=node.role==manager \
            --publish 5601:5601 \
            --network <%= appName %>-net \
            --network elk-net -e ELASTICSEARCH_URL=http://elasticsearch:9200 \
            --label com.df.notify=true \
            --label com.df.distribute=true \
            --label com.df.servicePath=/app/kibana,/bundles,/elasticsearch,/api,/plugins,/app/timelion \
            --label com.df.port=5601 \
            --reserve-memory 50m \
            --limit-cpu 0.5 \
            kibana:5.2.0

 - name: Create Filebeat service
   shell: >
           docker service create \
            --name filebeat \
            --mount "type=bind,source=/opt/<%= appName %>/elk/filebeat/filebeat.yml,target=/filebeat.yml" \
            --constraint=node.role==manager \
            --network <%= appName %>-net \
            --network elk-net \
            prima/filebeat:5
<% } %>            